import { sendMessage } from "../utils/telegram";
import type { Env, TgUpdate } from "../types";

function extractQuery(text: string) {
  // /wiki, /wiki@botname, –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –∞–±–æ –±–µ–∑
  return text.replace(/^\/wiki(?:@\w+)?\s*/i, "").trim();
}

function truncate(s: string, max = 1200) {
  if (s.length <= max) return s;
  return s.slice(0, max - 1).trimEnd() + "‚Ä¶";
}

export async function cmdWiki(env: Env, update: TgUpdate) {
  const chatId = update.message!.chat.id;
  const t = update.message?.text ?? "";
  const q = extractQuery(t);

  if (!q) {
    await sendMessage(env, chatId, "‚ÑπÔ∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: <b>/wiki &lt;–∑–∞–ø–∏—Ç&gt;</b>\n–ù–∞–ø—Ä.: <code>/wiki –ö–∏—ó–≤</code>");
    return;
  }

  const url = `https://uk.wikipedia.org/api/rest_v1/page/summary/${encodeURIComponent(q)}`;
  try {
    const res = await fetch(url, { headers: { "accept": "application/json" } });
    if (!res.ok) {
      await sendMessage(env, chatId, "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó. –°–ø—Ä–æ–±—É–π —ñ–Ω—à–∏–π –∑–∞–ø–∏—Ç.");
      return;
    }
    const data = await res.json() as any;

    // –ú–æ–∂–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ disambiguation –∞–±–æ –ø–æ–º–∏–ª–∫—É
    if (data?.type === "disambiguation") {
      await sendMessage(env, chatId, `üìñ <b>${data.title}</b>\n–¶–µ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω–∏–π –∑–∞–ø–∏—Ç. –£—Ç–æ—á–Ω–∏, –±—É–¥—å –ª–∞—Å–∫–∞.`);
      return;
    }
    if (!data?.extract) {
      await sendMessage(env, chatId, "–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π —ñ–Ω—à–∏–π –∑–∞–ø–∏—Ç.");
      return;
    }

    const title = data.title || q;
    const extract = truncate(String(data.extract));
    await sendMessage(env, chatId, `üìö <b>${title}</b>\n\n${extract}`);
  } catch (e) {
    console.error("wiki error:", e);
    await sendMessage(env, chatId, "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó.");
  }
}