// src/commands/start.ts
import type { TgUpdate } from "../types";
import type { Command } from "./types";

async function tgCall(
  env: { BOT_TOKEN: string; API_BASE_URL?: string },
  method: string,
  payload: Record<string, unknown>
) {
  const api = env.API_BASE_URL || "https://api.telegram.org";
  const res = await fetch(`${api}/bot${env.BOT_TOKEN}/${method}`, {
    method: "POST",
    headers: { "content-type": "application/json" },
    body: JSON.stringify(payload),
  });
  return res.json().catch(() => ({}));
}

const text = [
  "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø Senti ‚Äî –±–æ—Ç-–∞—Å–∏—Å—Ç–µ–Ω—Ç.",
  "",
  "–ö–æ—Ä–∏—Å–Ω–µ:",
  "‚Ä¢ /ping ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–≤‚Äô—è–∑–∫—É",
  "‚Ä¢ /health ‚Äî —Å—Ç–∞—Ç—É—Å OK",
  "‚Ä¢ /help ‚Äî –¥–æ–≤—ñ–¥–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
  "‚Ä¢ /wiki ‚Äî –º—ñ–Ω—ñ-–ø–æ—à—É–∫ —É –í—ñ–∫—ñ (–¥–µ–º–æ)",
].join("\n");

export const startCommand: Command = {
  name: "start",
  description: "–ü–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
  async execute(env, update) {
    const chatId = update.message?.chat?.id ?? update.callback_query?.message?.chat?.id;
    if (!chatId) return;
    await tgCall(env as any, "sendMessage", {
      chat_id: chatId,
      text,
    });
  },
};