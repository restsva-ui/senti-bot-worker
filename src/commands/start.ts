// src/commands/start.ts
type TgUpdate = any;

async function sendMessage(env: any, chatId: number | string, text: string, replyTo?: number) {
  const url = `${env.API_BASE_URL}/bot${env.BOT_TOKEN}/sendMessage`;
  const body: any = {
    chat_id: chatId,
    text,
    parse_mode: "Markdown",
    disable_web_page_preview: true,
  };
  if (replyTo) body.reply_to_message_id = replyTo;

  const res = await fetch(url, { method: "POST", headers: { "content-type": "application/json" }, body: JSON.stringify(body) });
  if (!res.ok) console.warn("sendMessage /start failed", await res.text());
}

function getChatId(update: TgUpdate): number | undefined {
  return update?.message?.chat?.id ?? update?.callback_query?.message?.chat?.id;
}

export async function start(update: TgUpdate, env: any) {
  const chatId = getChatId(update);
  if (!chatId) return;
  const text =
`üëã –ü—Ä–∏–≤—ñ—Ç! –Ø *Senti* ‚Äî –±–æ—Ç-–∞—Å–∏—Å—Ç–µ–Ω—Ç.

–ö–æ—Ä–∏—Å–Ω–µ:
‚Ä¢ \`/help\` ‚Äî –¥–æ–≤—ñ–¥–∫–∞
‚Ä¢ \`/wiki\` ‚Äî –≤–≤–µ–¥–∏ –∑–∞–ø–∏—Ç —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–±–æ –æ–¥—Ä–∞–∑—É —Ç–∞–∫: \`/wiki  –ö–∏—ó–≤\`, \`/wiki  en  Albert Einstein\`

–ü–æ—Ä–∞–¥–∞: –Ω–∞–¥—ñ—à–ª–∏ *\/wiki* —ñ –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–≤—ñ–π –∑–∞–ø–∏—Ç.`;
  await sendMessage(env, chatId, text, update?.message?.message_id);
}

export const handleStart = start;
export default start;