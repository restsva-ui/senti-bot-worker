// src/commands/start.ts
import type { TgUpdate } from "../types";

type Env = { BOT_TOKEN: string; API_BASE_URL?: string };

async function tgCall(
  env: Env,
  method: string,
  payload: Record<string, unknown>
) {
  const api = env.API_BASE_URL || "https://api.telegram.org";
  const res = await fetch(`${api}/bot${env.BOT_TOKEN}/${method}`, {
    method: "POST",
    headers: { "content-type": "application/json" },
    body: JSON.stringify(payload),
  });
  // –Ω–µ –≤–∞–ª–∏–º–æ –≤–æ—Ä–∫–µ—Ä, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–Ω–µ–º–æ
  if (!res.ok) {
    const t = await res.text().catch(() => "");
    console.error("tgCall error", method, res.status, t);
  }
  return res.json().catch(() => ({}));
}

export const startCommand = {
  name: "start",
  description: "–ü–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
  async execute(env: Env, update: TgUpdate) {
    const chatId = update.message?.chat?.id;
    if (!chatId) return;

    const text = [
      "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø <b>Senti</b> ‚Äî –±–æ—Ç-–∞—Å–∏—Å—Ç–µ–Ω—Ç.",
      "",
      "–ö–æ—Ä–∏—Å–Ω–µ:",
      "‚Ä¢ <code>/menu</code> ‚Äî –∫–Ω–æ–ø–∫–∏ –∫–æ–º–∞–Ω–¥",
      "‚Ä¢ <code>/help</code> ‚Äî –¥–æ–≤—ñ–¥–∫–∞",
      "‚Ä¢ <code>/wiki</code> ‚Äî –≤–≤–µ–¥–∏ –∑–∞–ø–∏—Ç —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–±–æ –æ–¥—Ä–∞–∑—É —Ç–∞–∫: <code>/wiki –ö–∏—ó–≤</code>, <code>/wiki en Albert Einstein</code>",
      "‚Ä¢ <code>/ping</code> ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–≤‚Äô—è–∑–∫—É",
    ].join("\n");

    await tgCall(env, "sendMessage", {
      chat_id: chatId,
      text,
      parse_mode: "HTML",
    });
  },
} as const;