// src/commands/start.ts
import type { TgUpdate } from "../types";

type Env = { BOT_TOKEN: string; API_BASE_URL?: string };

async function tgCall(
  env: Env,
  method: string,
  payload: Record<string, unknown>
) {
  const api = env.API_BASE_URL || "https://api.telegram.org";
  const res = await fetch(`${api}/bot${env.BOT_TOKEN}/${method}`, {
    method: "POST",
    headers: { "content-type": "application/json" },
    body: JSON.stringify(payload),
  });
  if (!res.ok) {
    const t = await res.text().catch(() => "");
    console.error("tgCall error", method, res.status, t);
  }
  return res.json().catch(() => ({}));
}

/**
 * /start ‚Äî –≤—ñ—Ç–∞–Ω–Ω—è + –§–Ü–ö–°–£–Ñ –Ω–∞—Ç–∏–≤–Ω–µ –º–µ–Ω—é Telegram (only: /help, /wiki)
 * –ú–µ–Ω—é –∑‚Äô—è–≤–ª—è—î—Ç—å—Å—è —É –ø–æ–ª—ñ ¬´–ú–µ–Ω—é¬ª –≤ –∫–ª—ñ—î–Ω—Ç—ñ Telegram.
 */
export const startCommand = {
  name: "start",
  description: "–ó–∞–ø—É—Å–∫ —ñ –≤—ñ—Ç–∞–Ω–Ω—è",
  async execute(env: Env, update: TgUpdate) {
    const chatId = update.message?.chat?.id;
    if (!chatId) return;

    // 1) –ó–≤—É–∂—É—î–º–æ —Å–ø–∏—Å–æ–∫ –≤–∏–¥–∏–º–∏—Ö –∫–æ–º–∞–Ω–¥ —É Telegram-–º–µ–Ω—é
    // —Ç—ñ–ª—å–∫–∏ /help —Ç–∞ /wiki (–ª–æ–∫–∞–ª—å–Ω–µ –æ–ø–∏—Å–∞–Ω–Ω—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –π –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é)
    const commands = [
      { command: "help", description: "–î–æ–≤—ñ–¥–∫–∞" },
      { command: "wiki", description: "–ö–æ—Ä–æ—Ç–∫–∞ –¥–æ–≤—ñ–¥–∫–∞ –∑ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó" },
    ];

    // –ì–ª–æ–±–∞–ª—å–Ω–æ (—É—Å—ñ –º–æ–≤–∏)
    await tgCall(env, "setMyCommands", { commands });

    // –û–ø—Ü—ñ–π–Ω–æ ‚Äî –æ–∫—Ä–µ–º–æ –¥–ª—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏
    await tgCall(env, "setMyCommands", {
      commands: [
        { command: "help", description: "Show help" },
        { command: "wiki", description: "Wikipedia quick lookup" },
      ],
      language_code: "en",
    });

    // 2) –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    const text = [
      "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø <b>Senti</b> ‚Äî –±–æ—Ç-–∞—Å–∏—Å—Ç–µ–Ω—Ç.",
      "",
      "–ö–æ—Ä–∏—Å–Ω–µ:",
      "‚Ä¢ <code>/menu</code> ‚Äî –∫–Ω–æ–ø–∫–∏ –∫–æ–º–∞–Ω–¥",
      "‚Ä¢ <code>/help</code> ‚Äî –¥–æ–≤—ñ–¥–∫–∞",
      "‚Ä¢ <code>/wiki</code> ‚Äî –≤–≤–µ–¥–∏ –∑–∞–ø–∏—Ç —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–±–æ –æ–¥—Ä–∞–∑—É —Ç–∞–∫: <code>/wiki –ö–∏—ó–≤</code>, <code>/wiki en Albert Einstein</code>",
      "‚Ä¢ <code>/ping</code> ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–≤‚Äô—è–∑–∫—É",
    ].join("\n");

    await tgCall(env, "sendMessage", {
      chat_id: chatId,
      text,
      parse_mode: "HTML",
      disable_web_page_preview: true,
    });
  },
} as const;