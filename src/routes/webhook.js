// src/routes/webhook.js
import { showAdminMenu, handleAdminButtons } from "./admin.js";
import { sendMessage } from "../lib/telegram.js";
import { clearState } from "../lib/state.js";
import { verifyWebhookSecret } from "../lib/verify.js";

export default async function webhook(request, env) {
  // –Ø–∫—â–æ –∑–∞–¥–∞–Ω–æ WEBHOOK_SECRET ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–µ–Ω –∑–∞–ø–∏—Ç
  if (env.WEBHOOK_SECRET) {
    try {
      if (!verifyWebhookSecret(request, env)) {
        return new Response("forbidden", { status: 403 });
      }
    } catch {
      return new Response("forbidden", { status: 403 });
    }
  }

  let update = {};
  try { update = await request.json(); } catch {}

  const msg = update.message || update.edited_message || update.callback_query?.message;
  if (!msg) return new Response("ok");

  const chatId = msg.chat?.id;
  const text = (update.message?.text || update.edited_message?.text || update.callback_query?.data || "").trim();

  // /start ‚Üí —á–∏—Å—Ç–∏–º–æ —Å—Ç–∞–Ω —ñ –ø–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é
  if (text === "/start") {
    try { await clearState(env, chatId, "*"); } catch {}
    await sendMessage(env, chatId, "üëã –ü—Ä–∏–≤—ñ—Ç! –ì–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏.");
    await showAdminMenu(env, chatId);
    return new Response("ok");
  }

  // –®–≤–∏–¥–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
  if (text === "/ping") {
    await sendMessage(env, chatId, "pong üü¢");
    return new Response("ok");
  }

  // /menu –∞–±–æ /admin ‚Üí –ø–∞–Ω–µ–ª—å
  if (text === "/menu" || text === "/admin") {
    await showAdminMenu(env, chatId);
    return new Response("ok");
  }

  // –Ü–Ω—à–µ ‚Äî —É–Ω—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫/—Å—Ç–∞–Ω—ñ–≤
  try {
    await handleAdminButtons(env, chatId, text);
  } catch (e) {
    await sendMessage(env, chatId, `–ü–æ–º–∏–ª–∫–∞: ${String(e?.message || e)}`);
  }
  return new Response("ok");
}