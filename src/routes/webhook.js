import { json, badRequest, forbidden } from "../lib/resp.js";
import { verifyWebhookSecret } from "../lib/verify.js";
import { sendMessage } from "../lib/telegram.js";

export async function handleWebhook(request, env) {
  // –ë–µ–∑–ø–µ–∫–∞: –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ–∫—Ä–µ—Ç
  if (!verifyWebhookSecret(request, env)) {
    return forbidden("Invalid webhook secret");
  }

  let update;
  try {
    update = await request.json();
  } catch {
    return badRequest("Invalid JSON");
  }

  // –ü—ñ–¥—Ç—Ä–∏–º—É—î–º–æ message —Ç–∞ edited_message
  const msg = update.message || update.edited_message;
  const chatId = msg?.chat?.id;
  const text = msg?.text ?? "";

  // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞: echo, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–≤‚Äô—è–∑–æ–∫
  if (chatId) {
    const reply = text
      ? `üëã –ü—Ä–∏–≤—ñ—Ç! –¢–∏ –Ω–∞–ø–∏—Å–∞–≤: ${text}`
      : "üëã –ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.";
    try {
      await sendMessage(env, chatId, reply);
    } catch (e) {
      // –ù–µ –ø–∞–¥–∞—î–º–æ 500, –ø—Ä–æ—Å—Ç–æ –∑–≤—ñ—Ç—É—î–º–æ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤–µ–±—Ö—É–∫—É
      return json({ ok: true, delivered: false, error: String(e?.message || e) });
    }
  }

  return json({ ok: true });
}