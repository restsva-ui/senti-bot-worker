// –ì–æ–ª–æ–≤–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ Telegram webhook
import { showAdminMenu, handleAdminButtons } from "./admin.js";
import { sendMessage } from "../utils/telegram.js";
import { clearState } from "../utils/state.js";

export default async function webhook(request, env) {
  let update;
  try { update = await request.json(); } catch { update = {}; }

  const msg = update.message || update.edited_message;
  if (!msg) return new Response("ok");

  const chatId = msg.chat?.id;
  const text = (msg.text || "").trim();

  // –ë–µ–∑–ø–µ–∫–∞: –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ–∫—Ä–µ—Ç Telegram, —è–∫—â–æ –∑–∞–¥–∞–Ω–∏–π
  const sec = env.TELEGRAM_SECRET_TOKEN ?? "";
  if (sec) {
    const header = request.headers.get("X-Telegram-Bot-Api-Secret-Token") || "";
    if (header !== sec) return new Response("forbidden", { status: 403 });
  }

  // –ö–æ–º–∞–Ω–¥–∏
  if (text === "/start") {
    await clearState(env, chatId, "awaiting_url");
    await clearState(env, chatId, "awaiting_checklist_line");
    await sendMessage(env, chatId,
      "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n/start ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\n/menu ‚Äî –∞–¥–º—ñ–Ω-–º–µ–Ω—é\n/ping ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–≤'—è–∑–∫—É"
    );
    return new Response("ok");
  }

  if (text === "/help") {
    await sendMessage(env, chatId,
      "–ö–æ–º–∞–Ω–¥–∏:\n/start, /menu, /ping\n\n–í –∞–¥–º—ñ–Ω-–º–µ–Ω—é ‚Äî –∫–Ω–æ–ø–∫–∏ Drive, List, Backup URL, Checklist."
    );
    return new Response("ok");
  }

  if (text === "/ping") {
    await sendMessage(env, chatId, "pong üü¢");
    return new Response("ok");
  }

  // –Ω–∞—à–µ –≥–æ–ª–æ–≤–Ω–µ ‚Äî /menu —ñ /admin –ø–æ–∫–∞–∑—É—é—Ç—å –æ–¥–Ω—É –π —Ç—É —Å–∞–º—É –ø–∞–Ω–µ–ª—å
  if (text === "/menu" || text === "/admin") {
    await showAdminMenu(env, chatId);
    return new Response("ok");
  }

  // –ö–Ω–æ–ø–∫–∏ –∑ –∞–¥–º—ñ–Ω-–º–µ–Ω—é —Ç–∞ —Å—Ç–∞–Ω–∏
  await handleAdminButtons(env, chatId, text);
  return new Response("ok");
}