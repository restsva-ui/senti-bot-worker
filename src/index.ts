// src/index.ts
import { routeUpdate } from "./router";
import type { Update } from "./telegram/types";
import { CFG } from "./config";
import { sendMessage } from "./telegram/api";

export default {
  async fetch(request: Request): Promise<Response> {
    const url = new URL(request.url);

    // 1) –ü—Ä–æ—Å—Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∂–∏–≤–æ—Å—Ç—ñ –≤–æ—Ä–∫–µ—Ä–∞
    if (request.method === "GET" && url.pathname === "/") {
      return new Response("OK", { status: 200 });
    }
    if (request.method === "GET" && url.pathname === "/health") {
      return new Response("healthy", { status: 200 });
    }

    // 2) –í–µ–±—Ö—É–∫: /webhook/<secret>
    if (
      request.method === "POST" &&
      url.pathname === `/webhook/${CFG.webhookSecret}`
    ) {
      let update: Update | null = null;
      try {
        update = (await request.json()) as Update;

        // üîé –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê: –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∫–æ—Ä–æ—Ç–∫–µ —Å–ª—É–∂–±–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–ª–∞—Å–Ω–∏–∫—É
        // —â–æ–± –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏, —â–æ –∞–ø–¥–µ–π—Ç —Ä–µ–∞–ª—å–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ —É –≤–æ—Ä–∫–µ—Ä.
        const kind = update.callback_query
          ? "callback_query"
          : update.message
          ? "message"
          : "other";
        await sendMessage(
          Number(CFG.ownerId),
          `üîé webhook: –æ—Ç—Ä–∏–º–∞–≤ ${kind} (update_id: ${"update_id" in update ? (update as any).update_id : "?"})`
        );

        // –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—è
        await routeUpdate(update);
      } catch (e) {
        // –Ø–∫—â–æ –ø–∞—Ä—Å–∏–Ω–≥ –∞–±–æ –æ–±—Ä–æ–±–∫–∞ –≤–ø–∞–ª–∏ ‚Äî —Ç–µ–∂ —Å–∫–∞–∂–µ–º–æ –≤–ª–∞—Å–Ω–∏–∫—É
        try {
          await sendMessage(
            Number(CFG.ownerId),
            `‚ö†Ô∏è webhook error: ${(e as Error).message || e}`
          );
        } catch {
          // ignore
        }
      }
      // –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ Telegram —è–∫–Ω–∞–π—à–≤–∏–¥—à–µ
      return new Response("OK", { status: 200 });
    }

    // 3) –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ
    return new Response("Not found", { status: 404 });
  },
};