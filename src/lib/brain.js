// src/lib/brain.js
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ askAnyModel. –Ø–∫—â–æ –≤—Å—ñ –º–æ–¥–µ–ª—ñ –≤–ø–∞–ª–∏ ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑—Ä–æ–∑—É–º—ñ–ª—É –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É.

import { askAnyModel } from "./modelRouter.js";

export async function think(env, userText, systemHint = "") {
  const text = String(userText || "").trim();
  if (!text) return "ü§ñ –î–∞–π –º–µ–Ω—ñ —Ç–µ–∫—Å—Ç –∞–±–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è ‚Äî —ñ —è –≤—ñ–¥–ø–æ–≤—ñ–º.";

  const prompt = systemHint ? `${systemHint}\n\n–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ${text}` : text;

  try {
    const out = await askAnyModel(env, prompt, { temperature: 0.4, max_tokens: 1024 });
    if (out && typeof out === "string") return out;
  } catch (e) {
    const status = e?.status || 0;
    const msg = e?.message || "model error";
    const where =
      msg.startsWith("cf ") ? "Cloudflare Workers AI" :
      msg.startsWith("gemini ") ? "Gemini" :
      msg.startsWith("openrouter ") ? "OpenRouter" :
      "–ú–æ–¥–µ–ª—å";
    const note =
      status === 402 ? "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤/–¥–æ—Å—Ç—É–ø—É." :
      status === 429 ? "–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç (rate limit)." :
      status ? `HTTP ${status}. ${msg}` : msg;

    return (
      "üß† –ó–∞—Ä–∞–∑ –Ω–µ –≤–¥–∞–ª–æ—Å—å –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ —á–µ—Ä–µ–∑ –∑–æ–≤–Ω—ñ—à–Ω—é –º–æ–¥–µ–ª—å.\n" +
      `–ü—Ä–∏—á–∏–Ω–∞: ${where} ‚Äî ${note}\n\n` +
      "–©–æ –∑—Ä–æ–±–∏—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ:\n" +
      "‚Ä¢ –£–≤—ñ–º–∫–Ω–∏ Gemini (GOOGLE_API_KEY) –∞–±–æ Cloudflare Workers AI (CF_ACCOUNT_ID + CLOUDFLARE_API_TOKEN).\n" +
      "‚Ä¢ –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤ –∫–µ—Ä—É—î—Ç—å—Å—è MODEL_ORDER (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: gemini:gemini-1.5-flash-latest,cf:@cf/meta/llama-3.1-8b-instruct,openrouter:deepseek/deepseek-chat)."
    );
  }

  return (
    "üß† –ú–æ–¥–µ–ª—ñ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è: –∞–∫—Ç–∏–≤—É–π Gemini –∞–±–æ CF Workers AI.\n" +
    "–ü–µ—Ä–µ–≤—ñ—Ä –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ —Ç–∞ MODEL_ORDER."
  );
}