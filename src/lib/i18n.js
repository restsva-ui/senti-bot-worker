// src/lib/i18n.js
// –õ–µ–≥–∫–∏–π I18N –¥–ª—è Senti: –∞–≤—Ç–æ-–≤–∏–±—ñ—Ä –º–æ–≤–∏ + —Ä–æ–∑–º–æ–≤–Ω–∏–π —Å—Ç–∏–ª—å.
// –ü—ñ–¥—Ç—Ä–∏–º–∫–∞: uk, ru, en (US), de, fr.

const SUPPORTED = ["uk", "ru", "en", "de", "fr"];

const NORM = (code = "") => {
  const s = String(code).toLowerCase();
  if (s.startsWith("uk")) return "uk";
  if (s.startsWith("ru")) return "ru";
  if (s.startsWith("en")) return "en";
  if (s.startsWith("de")) return "de";
  if (s.startsWith("fr")) return "fr";
  return "";
};

// –ü—Ä–æ—Å—Ç–µ–Ω—å–∫–∞ –¥–µ—Ç–µ–∫—Ü—ñ—è –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º/—Ç–æ–∫–µ–Ω–∞–º–∏ (–±–µ–∑ –∑–æ–≤–Ω. API)
export function detectLangFromText(text = "") {
  const s = String(text || "");
  if (!s) return "";
  const cyr = /[–∞-—è—ë—ñ—ó—î“ë]/i.test(s);
  const ukHints = /(–±—É–¥—å –ª–∞—Å–∫–∞|–¥—è–∫—É—é|–ø—Ä–∏–≤—ñ—Ç|–±—É–¥—å-—â–æ|—Ç–µ–º–Ω(–∞|—É) —Ç–µ–º—É|—ó)/i.test(s);
  const ruHints = /(–ø–æ–∂–∞–ª—É–π—Å—Ç–∞|—Å–ø–∞—Å–∏–±–æ|–ø—Ä–∏–≤–µ—Ç|—Ç–µ–º–Ω(–∞—è|—É—é) —Ç–µ–º—É|—ë|—ã|—ç)/i.test(s);
  if (cyr && ukHints) return "uk";
  if (cyr && ruHints) return "ru";
  if (/[√§√∂√º√ü]/i.test(s)) return "de";
  if (/[√†√¢√ß√©√®√™√´√Æ√Ø√¥√ª√π√º√ø≈ì]/i.test(s)) return "fr";
  if (/[a-z]/i.test(s)) return "en";
  return "";
}

// KV –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º–æ–≤–∏ —á–∞—Ç—É
const LANG_KEY = (chatId) => `lang:${chatId}`;
const ensureState = (env) => {
  if (!env.STATE_KV) throw new Error("STATE_KV missing for i18n");
  return env.STATE_KV;
};

export async function getChatLang(env, chatId) {
  try { return await ensureState(env).get(LANG_KEY(chatId)) || ""; } catch { return ""; }
}
export async function setChatLang(env, chatId, lang) {
  try { await ensureState(env).put(LANG_KEY(chatId), lang, { expirationTtl: 60*60*24*90 }); } catch {}
}

// –û—Å–Ω–æ–≤–Ω–∏–π –≤–∏–±—ñ—Ä –º–æ–≤–∏:
// 1) —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω—É ‚Äî –±–µ—Ä–µ–º–æ —ó—ó,
// 2) —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–≤–Ω–æ —ñ–Ω—à–æ—é –º–æ–≤–æ—é ‚Äî –ø–µ—Ä–µ–º–∏–∫–∞—î–º–æ—Å—è,
// 3) —ñ–Ω–∞–∫—à–µ ‚Äî Telegram language_code, –¥–∞–ª—ñ 'uk' —è–∫ –¥–µ—Ñ–æ–ª—Ç.
export async function decideLang(env, chatId, tgLangCode, incomingText) {
  const saved = await getChatLang(env, chatId);
  const detected = detectLangFromText(incomingText);
  if (saved && detected && detected !== saved) {
    await setChatLang(env, chatId, detected); 
    return detected;
  }
  if (saved) return saved;
  const normTg = NORM(tgLangCode);
  const chosen = detected || normTg || "uk";
  await setChatLang(env, chatId, chosen);
  return chosen;
}

// –†–æ–∑–º–æ–≤–Ω–∏–π —Å—Ç–∏–ª—å —è–∫ —Å–∏—Å—Ç–µ–º–Ω–∏–π —Ö—ñ–Ω—Ç
export function styleHint(lang) {
  switch (lang) {
    case "ru": return "–û—Ç–≤–µ—á–∞–π –ø–æ-—Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–º—É, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ. –ù–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–π —ç–º–æ–¥–∑–∏. –ù–µ –Ω–∞—á–∏–Ω–∞–π –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –¥–∏–∞–ª–æ–≥ —É–∂–µ –∏–¥—ë—Ç.";
    case "en": return "Reply in a casual, friendly tone. Keep it concise, avoid corporate language. Don't re-greet if the chat is already ongoing.";
    case "de": return "Antworte locker, freundlich und knapp. Kein Amtsdeutsch. Kein erneutes Begr√º√üen, wenn das Gespr√§ch schon l√§uft.";
    case "fr": return "R√©ponds de fa√ßon naturelle et amicale, en restant concise. Pas de ton administratif. Pas de nouveaux salutations si la discussion est d√©j√† engag√©e.";
    default:   return "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —Ä–æ–∑–º–æ–≤–Ω–æ, –¥—Ä—É–∂–Ω—å–æ –π –ø—Ä–æ—Å—Ç–æ. –ú–µ–Ω—à–µ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∑–º—ñ–≤. –ù–µ –≤—ñ—Ç–∞–π—Å—è —â–æ—Ä–∞–∑—É, —è–∫—â–æ –¥—ñ–∞–ª–æ–≥ —É–∂–µ —Ç—Ä–∏–≤–∞—î.";
  }
}

// –ù–µ–≤–µ–ª–∏–∫–∏–π —Å–ª–æ–≤–Ω–∏—á–æ–∫ —Å–ª—É–∂–±–æ–≤–∏—Ö —Ñ—Ä–∞–∑ (—Ç–µ, —â–æ —á–∞—Å—Ç–æ –ø–æ–∫–∞–∑—É—î–º–æ –∑ –∫–æ–¥—É)
const STRINGS = {
  start: {
    uk: "–ü—Ä–∏–≤—ñ—Ç! –Ø Senti ü§ñ –ì–æ—Ç–æ–≤–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏.",
    ru: "–ü—Ä–∏–≤–µ—Ç! –Ø Senti ü§ñ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å.",
    en: "Hi! I'm Senti ü§ñ Ready to help.",
    de: "Hi! Ich bin Senti ü§ñ Bereit zu helfen.",
    fr: "Salut ! Je suis Senti ü§ñ Pr√™t √† aider.",
  },
  diskOn: {
    uk: "üìÅ –†–µ–∂–∏–º –¥–∏—Å–∫–∞: ON. –ù–∞–¥—Å–∏–ª–∞–π —Ñ–∞–π–ª–∏ ‚Äî –∑–±–µ—Ä–µ–∂—É –Ω–∞ —Ç–≤—ñ–π Google Drive.",
    ru: "üìÅ –†–µ–∂–∏–º –¥–∏—Å–∫–∞: ON. –ü—Ä–∏—Å—ã–ª–∞–π —Ñ–∞–π–ª—ã ‚Äî —Å–æ—Ö—Ä–∞–Ω—é –Ω–∞ —Ç–≤–æ–π Google Drive.",
    en: "üìÅ Drive mode: ON. Send files ‚Äî I‚Äôll save them to your Google Drive.",
    de: "üìÅ Laufwerksmodus: AN. Sende Dateien ‚Äî ich speichere sie in deinem Google Drive.",
    fr: "üìÅ Mode Drive : activ√©. Envoie des fichiers ‚Äî je les enregistrerai sur ton Google Drive.",
  },
  diskOff: {
    uk: "–†–µ–∂–∏–º –¥–∏—Å–∫–∞ –≤–∏–º–∫–Ω–µ–Ω–æ. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ —á–∞—Ç—É Senti.",
    ru: "–†–µ–∂–∏–º –¥–∏—Å–∫–∞ –æ—Ç–∫–ª—é—á—ë–Ω. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —á–∞—Ç—É Senti.",
    en: "Drive mode off. Back to Senti chat.",
    de: "Laufwerksmodus aus. Zur√ºck zum Senti-Chat.",
    fr: "Mode Drive d√©sactiv√©. Retour au chat Senti.",
  },
  needAuth: {
    uk: (url)=>`–©–æ–± –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —É —Å–≤—ñ–π Google Drive ‚Äî –¥–∞–π –¥–æ—Å—Ç—É–ø:\n${url}\n–ü–æ—Ç—ñ–º –Ω–∞—Ç–∏—Å–Ω–∏ ¬´Google Drive¬ª —â–µ —Ä–∞–∑.`,
    ru: (url)=>`–ß—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ Google Drive ‚Äî –¥–∞–π –¥–æ—Å—Ç—É–ø:\n${url}\n–ü–æ—Ç–æ–º –Ω–∞–∂–º–∏ ¬´Google Drive¬ª –µ—â—ë —Ä–∞–∑.`,
    en: (url)=>`To save to Google Drive, please authorize:\n${url}\nThen press ‚ÄúGoogle Drive‚Äù again.`,
    de: (url)=>`Um in Google Drive zu speichern, erteile bitte Zugriff:\n${url}\nDann dr√ºcke erneut ‚ÄûGoogle Drive‚Äú.`,
    fr: (url)=>`Pour enregistrer dans Google Drive, autorise l‚Äôacc√®s :\n${url}\nPuis appuie encore sur ¬´ Google Drive ¬ª.`,
  },
  noEnergyText: {
    uk: (need, link)=>`üîã –ù–µ –≤–∏—Å—Ç–∞—á–∞—î –µ–Ω–µ—Ä–≥—ñ—ó (–ø–æ—Ç—Ä—ñ–±–Ω–æ ${need}). –í–æ–Ω–∞ –≤—ñ–¥–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.\n–ö–µ—Ä—É–≤–∞–Ω–Ω—è: ${link}`,
    ru: (need, link)=>`üîã –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏ (–Ω—É–∂–Ω–æ ${need}). –û–Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${link}`,
    en: (need, link)=>`üîã Not enough energy (need ${need}). It regenerates automatically.\nManage: ${link}`,
    de: (need, link)=>`üîã Nicht genug Energie (ben√∂tigt ${need}). Sie regeneriert automatisch.\nVerwaltung: ${link}`,
    fr: (need, link)=>`üîã Pas assez d‚Äô√©nergie (il faut ${need}). Elle se r√©g√©n√®re automatiquement.\nG√©rer : ${link}`,
  },
  lowEnergyTail: {
    uk: (cur, link)=>`\n\n‚ö†Ô∏è –ù–∏–∑—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å –µ–Ω–µ—Ä–≥—ñ—ó (${cur}). –ö–µ—Ä—É–≤–∞–Ω–Ω—è: ${link}`,
    ru: (cur, link)=>`\n\n‚ö†Ô∏è –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ (${cur}). –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${link}`,
    en: (cur, link)=>`\n\n‚ö†Ô∏è Low energy (${cur}). Manage: ${link}`,
    de: (cur, link)=>`\n\n‚ö†Ô∏è Wenig Energie (${cur}). Verwaltung: ${link}`,
    fr: (cur, link)=>`\n\n‚ö†Ô∏è √ânergie faible (${cur}). G√©rer : ${link}`,
  },
};

export function t(lang, key, ...args) {
  const L = SUPPORTED.includes(lang) ? lang : "uk";
  const val = STRINGS[key]?.[L];
  if (typeof val === "function") return val(...args);
  return val || "";
}