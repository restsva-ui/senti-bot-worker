// src/lib/i18n.js
// Multilang helper: language storage + texts + robust detection

export const SUP_LANGS = ["uk", "ru", "de", "en", "fr"];
const LANG_KEY = (uid) => `lang:${uid}`;

const ensureState = (env) => {
  if (!env.STATE_KV) throw new Error("STATE_KV binding missing");
  return env.STATE_KV;
};

export function normTgLang(code = "") {
  const c = String(code || "").toLowerCase();
  if (c.startsWith("uk")) return "uk";
  if (c.startsWith("ru")) return "ru";
  if (c.startsWith("de")) return "de";
  if (c.startsWith("fr")) return "fr";
  return "en";
}

// ---- language detection -----------------------------------------------------
function scoreVotes(text = "") {
  const t = String(text).toLowerCase();

  // unique letters -> strong hints
  const strong = {
    uk: /[—ó—î“ë—ñ]/i.test(t),
    ru: /[—ë—ã—ç—ä]/i.test(t),
    de: /[√§√∂√º√ü]/i.test(t),
    fr: /[√†√¢√ß√©√®√™√´√Æ√Ø√¥√ª√π√º√ø≈ì√¶]/i.test(t),
  };

  // stopwords (–∫–æ—Ä–æ—Ç–∫—ñ, –∞–ª–µ —Å–∏–≥–Ω–∞–ª–Ω—ñ). –≤–∞–≥–∏ –ø—ñ–¥—ñ–±—Ä–∞–Ω—ñ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ
  const votes = { uk: 0, ru: 0, de: 0, en: 0, fr: 0 };
  const bump = (k, n = 1) => (votes[k] += n);

  // uk
  if (/\b(—è–∫|—â–æ|—Ü–µ|—Ç–∞|–∞–ª–µ|—Ç—É—Ç|–ø—Ä–∏–≤—ñ—Ç|–¥—è–∫—É—é|–±—É–¥—å –ª–∞—Å–∫–∞|–ø—Ä–æ—à—É)\b/.test(t)) bump("uk", 2);

  // ru
  if (/\b(–∫–∞–∫|—á—Ç–æ|—ç—Ç–æ|—ç—Ç–æ—Ç|–Ω—É|–ø—Ä–∏–≤–µ—Ç|–ø–æ–º–æ–≥–∏|–ø–æ–∂–∞–ª—É–π—Å—Ç–∞|—è)\b/.test(t)) bump("ru", 2);

  // de
  if (/\b(der|die|das|und|ist|nicht|ich|heute|bitte|danke)\b/.test(t)) bump("de", 2);

  // en
  if (/\b(the|and|is|are|you|i|what|how|please|thanks)\b/.test(t)) bump("en", 2);

  // fr
  if (/\b(le|la|les|et|est|pas|je|tu|aujourd'hui|s'il vous pla√Æt|merci)\b/.test(t)) bump("fr", 2);

  // tiny bias to latin-only text -> en
  if (/^[\x00-\x7F\s.,!?:'"()\-]+$/.test(t)) bump("en", 1);

  // pick best
  let best = "en", max = -1;
  for (const k of SUP_LANGS) {
    if (votes[k] > max) { max = votes[k]; best = k; }
  }

  // strong signal wins regardless of votes
  const strongLang = Object.entries(strong).find(([, v]) => v)?.[0] || null;
  return {
    lang: strongLang || best,
    score: strongLang ? 99 : max,   // 99 = force switch
    strong: !!strongLang,
  };
}

function containsDontUnderstand(text = "") {
  const t = text.toLowerCase();
  return (
    /–Ω–µ –ø–æ–Ω–∏–º–∞—é|–Ω–µ —Ä–æ–∑—É–º—ñ—é|i don't understand|je ne comprends pas|ich verstehe (es|das) nicht/.test(t)
  );
}

/**
 * Detect language from message. Returns {lang, score, strong}.
 */
export function detectLangFromText(s = "", fallback = "en") {
  if (!s || s.trim().length < 2) return { lang: fallback, score: 0, strong: false };
  return scoreVotes(s);
}

/**
 * Decide and persist user language.
 * Strategy:
 *  - start from saved or Telegram code
 *  - detect on each message
 *  - switch only if strong OR score >= 2 AND different from current
 *  - if phrase like "I don't understand this language" is present ‚Äî switch to message lang
 */
export async function getUserLang(env, userId, tgCode, lastText = "") {
  const kv = ensureState(env);
  const key = LANG_KEY(userId);
  const saved = await kv.get(key);
  let lang = saved || normTgLang(tgCode);

  if (lastText && lastText.length >= 2) {
    const det = detectLangFromText(lastText, lang);
    const wantSwitch =
      det.strong || (det.lang !== lang && det.score >= 2) || containsDontUnderstand(lastText);

    if (SUP_LANGS.includes(det.lang) && wantSwitch) {
      lang = det.lang;
      await kv.put(key, lang, { expirationTtl: 60 * 60 * 24 * 90 }); // 90 days
    }
  }
  return SUP_LANGS.includes(lang) ? lang : "en";
}

// ---- translations -----------------------------------------------------------
export const TR = {
  // –¥—Ä—É–∂–Ω—î, –∫–æ—Ä–æ—Ç–∫–µ –≤—ñ—Ç–∞–Ω–Ω—è –ø—ñ—Å–ª—è /start
  hello: {
    uk: "–ü—Ä–∏–≤—ñ—Ç! –Ø Senti ü§ñ –ì–æ—Ç–æ–≤–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏.",
    ru: "–ü—Ä–∏–≤–µ—Ç! –Ø Senti ü§ñ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å.",
    de: "Hi! Ich bin Senti ü§ñ ‚Äî bereit zu helfen.",
    en: "Hey! I‚Äôm Senti ü§ñ‚Äîready to help.",
    fr: "Salut ! Je suis Senti ü§ñ, pr√™t √† aider.",
  },

  // –ø—ñ–¥–∫–∞–∑–∫–∞ –¥–ª—è /ai (–∫–æ–ª–∏ –ø—É—Å—Ç–∏–π –∑–∞–ø–∏—Ç)
  ai_usage: {
    uk: "‚úçÔ∏è –ù–∞–ø–∏—à–∏ –∑–∞–ø–∏—Ç –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏ /ai. –ù–∞–ø—Ä.:\n/ai –°–∫—ñ–ª—å–∫–∏ –±—É–¥–µ 2+2?",
    ru: "‚úçÔ∏è –ù–∞–ø–∏—à–∏ –∑–∞–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /ai. –ù–∞–ø—Ä–∏–º–µ—Ä:\n/ai –°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2+2?",
    de: "‚úçÔ∏è Schreib deine Frage nach /ai. Z. B.:\n/ai Wieviel ist 2+2?",
    en: "‚úçÔ∏è Type your question after /ai. E.g.:\n/ai What‚Äôs 2+2?",
    fr: "‚úçÔ∏è √âcris ta question apr√®s /ai. Par ex. :\n/ai 2+2 = ?",
  },

  // –µ–Ω–µ—Ä–≥—ñ—è: –Ω–µ –≤–∏—Å—Ç–∞—á–∞—î
  energy_not_enough: {
    uk: (need, links) =>
      `üîã –ù–µ –≤–∏—Å—Ç–∞—á–∞—î –µ–Ω–µ—Ä–≥—ñ—ó (–ø–æ—Ç—Ä—ñ–±–Ω–æ ${need}). –í–æ–Ω–∞ –≤—ñ–¥–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.\n–ö–µ—Ä—É–≤–∞–Ω–Ω—è:\n‚Ä¢ Energy: ${links.energy}\n‚Ä¢ Checklist: ${links.checklist}`,
    ru: (need, links) =>
      `üîã –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏ (–Ω—É–∂–Ω–æ ${need}). –û–Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n‚Ä¢ Energy: ${links.energy}\n‚Ä¢ Checklist: ${links.checklist}`,
    de: (need, links) =>
      `üîã Nicht genug Energie (ben√∂tigt ${need}). Sie l√§dt sich automatisch auf.\nVerwalten:\n‚Ä¢ Energy: ${links.energy}\n‚Ä¢ Checklist: ${links.checklist}`,
    en: (need, links) =>
      `üîã Not enough energy (need ${need}). It refills automatically.\nManage:\n‚Ä¢ Energy: ${links.energy}\n‚Ä¢ Checklist: ${links.checklist}`,
    fr: (need, links) =>
      `üîã Pas assez d‚Äô√©nergie (il faut ${need}). Elle se recharge automatiquement.\nG√©rer :\n‚Ä¢ Energy : ${links.energy}\n‚Ä¢ Checklist : ${links.checklist}`,
  },

  // –µ–Ω–µ—Ä–≥—ñ—è: –Ω–∏–∑—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å
  energy_low_hint: {
    uk: (cur, link) => `‚ö†Ô∏è –ù–∏–∑—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å –µ–Ω–µ—Ä–≥—ñ—ó (${cur}). –í—ñ–¥–Ω–æ–≤–∏—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –ö–µ—Ä—É–≤–∞–Ω–Ω—è: ${link}`,
    ru: (cur, link) => `‚ö†Ô∏è –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ (${cur}). –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${link}`,
    de: (cur, link) => `‚ö†Ô∏è Niedriger Energiewert (${cur}). L√§dt sich automatisch auf. Verwalten: ${link}`,
    en: (cur, link) => `‚ö†Ô∏è Low energy (${cur}). It will refill automatically. Manage: ${link}`,
    fr: (cur, link) => `‚ö†Ô∏è √ânergie faible (${cur}). Recharge automatique. G√©rer : ${link}`,
  },

  // Drive –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è (—î–¥–∏–Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–∞ –ø—ñ–¥–∫–∞–∑–∫–∞; —Å–∞–º—ñ —Å—Ç–∞—Ç—É—Å–∏ "on/off" –º–∏ –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ)
  drive_auth: {
    uk: (url) => `–©–æ–± –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —É —Å–≤—ñ–π Google Drive ‚Äî –¥–æ–∑–≤–æ–ª—å –¥–æ—Å—Ç—É–ø:\n${url}\n\n–ü–æ—Ç—ñ–º –Ω–∞—Ç–∏—Å–Ω–∏ ¬´üìÅ Drive¬ª —â–µ —Ä–∞–∑.`,
    ru: (url) => `–ß—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ —Å–≤–æ–π Google Drive ‚Äî –¥–∞–π –¥–æ—Å—Ç—É–ø:\n${url}\n\n–ü–æ—Ç–æ–º –Ω–∞–∂–º–∏ ¬´üìÅ Drive¬ª –µ—â—ë —Ä–∞–∑.`,
    de: (url) => `Zum Speichern auf deinem Google Drive: bitte Zugriff erlauben:\n${url}\n\nDann dr√ºcke nochmal ¬´üìÅ Drive¬ª.`,
    en: (url) => `To save to your Google Drive, grant access first:\n${url}\n\nThen tap ‚ÄúüìÅ Drive‚Äù again.`,
    fr: (url) => `Pour enregistrer sur ton Google Drive, accorde d‚Äôabord l‚Äôacc√®s :\n${url}\n\nPuis appuie encore sur ¬´ üìÅ Drive ¬ª.`,
  },

  // —Ü—ñ –∫–ª—é—á—ñ –ª–∏—à–∞—î–º–æ –ø—É—Å—Ç–∏–º–∏ ‚Äî —É UI –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏–≤–æ–¥–∏–º–æ
  drive_on:  { uk: "", ru: "", de: "", en: "", fr: "" },
  drive_off: { uk: "", ru: "", de: "", en: "", fr: "" },

  // –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É –Ω–∞ Drive
  saved_to_drive: {
    uk: (name) => `‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –Ω–∞ —Ç–≤–æ—î–º—É –¥–∏—Å–∫—É: ${name}`,
    ru: (name) => `‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –Ω–∞ —Ç–≤–æ—ë–º –¥–∏—Å–∫–µ: ${name}`,
    de: (name) => `‚úÖ Auf deinem Drive gespeichert: ${name}`,
    en: (name) => `‚úÖ Saved to your Drive: ${name}`,
    fr: (name) => `‚úÖ Enregistr√© sur ton Drive : ${name}`,
  },

  // –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Checklist (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ –∞–¥–º—ñ–Ω-–º–µ–Ω—é)
  checklist_link: {
    uk: (link) => `üìã –ß–µ–∫–ª–∏—Å—Ç (HTML):\n${link}`,
    ru: (link) => `üìã –ß–µ–∫–ª–∏—Å—Ç (HTML):\n${link}`,
    de: (link) => `üìã Checkliste (HTML):\n${link}`,
    en: (link) => `üìã Checklist (HTML):\n${link}`,
    fr: (link) => `üìã Checklist (HTML) :\n${link}`,
  },

  // —Ç–µ–∫—Å—Ç–æ–≤–µ –∞–¥–º—ñ–Ω-–º–µ–Ω—é (–ø—Ä–æ –≤—Å—è–∫ –≤–∏–ø–∞–¥–æ–∫ ‚Äî —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—Ä—è–¥ –∑ —ñ–Ω–ª–∞–π–Ω–æ–º)
  admin_menu: {
    uk: (cl, repo, hook) => `üõ† –ê–¥–º—ñ–Ω-–º–µ–Ω—é\n\n‚Ä¢ –ß–µ–∫–ª–∏—Å—Ç: ${cl}\n‚Ä¢ Repo: ${repo}\n‚Ä¢ –í–µ–±—Ö—É–∫ GET: ${hook}`,
    ru: (cl, repo, hook) => `üõ† –ê–¥–º–∏–Ω-–º–µ–Ω—é\n\n‚Ä¢ –ß–µ–∫–ª–∏—Å—Ç: ${cl}\n‚Ä¢ Repo: ${repo}\n‚Ä¢ Webhook GET: ${hook}`,
    de: (cl, repo, hook) => `üõ† Admin-Men√º\n\n‚Ä¢ Checkliste: ${cl}\n‚Ä¢ Repo: ${repo}\n‚Ä¢ Webhook GET: ${hook}`,
    en: (cl, repo, hook) => `üõ† Admin menu\n\n‚Ä¢ Checklist: ${cl}\n‚Ä¢ Repo: ${repo}\n‚Ä¢ Webhook GET: ${hook}`,
    fr: (cl, repo, hook) => `üõ† Menu admin\n\n‚Ä¢ Checklist : ${cl}\n‚Ä¢ Repo : ${repo}\n‚Ä¢ Webhook GET : ${hook}`,
  },

  // –¥–æ–≤—ñ–¥–∫–∞ –ø–æ /tone
  tone_help: {
    uk: () => `–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–æ–Ω—É:\n/tone auto ‚Äî –∞–≤—Ç–æ\n/tone friendly|casual|playful|concise|professional|formal|empathetic|neutral`,
    ru: () => `–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–Ω–∞:\n/tone auto ‚Äî –∞–≤—Ç–æ\n/tone friendly|casual|playful|concise|professional|formal|empathetic|neutral`,
    de: () => `Ton-Einstellung:\n/tone auto ‚Äî automatisch\n/tone friendly|casual|playful|concise|professional|formal|empathetic|neutral`,
    en: () => `Tone settings:\n/tone auto\n/tone friendly|casual|playful|concise|professional|formal|empathetic|neutral`,
    fr: () => `R√©glage du ton :\n/tone auto\n/tone friendly|casual|playful|concise|professional|formal|empathetic|neutral`,
  },

  // –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è /tone
  tone_set_ok: {
    uk: (v) => `‚úÖ –¢–æ–Ω –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${v}`,
    ru: (v) => `‚úÖ –¢–æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${v}`,
    de: (v) => `‚úÖ Ton gesetzt: ${v}`,
    en: (v) => `‚úÖ Tone set: ${v}`,
    fr: (v) => `‚úÖ Ton d√©fini : ${v}`,
  },

  // –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π /tone
  tone_current: {
    uk: (mode, value, last) => `–¢–æ–Ω: —Ä–µ–∂–∏–º=${mode}, –∑–Ω–∞—á–µ–Ω–Ω—è=${value || "‚Äî"}, –∞–≤—Ç–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π=${last || "‚Äî"}`,
    ru: (mode, value, last) => `–¢–æ–Ω: —Ä–µ–∂–∏–º=${mode}, –∑–Ω–∞—á–µ–Ω–∏–µ=${value || "‚Äî"}, –∞–≤—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π=${last || "‚Äî"}`,
    de: (mode, value, last) => `Ton: Modus=${mode}, Wert=${value || "‚Äî"}, Auto zuletzt=${last || "‚Äî"}`,
    en: (mode, value, last) => `Tone: mode=${mode}, value=${value || "‚Äî"}, auto last=${last || "‚Äî"}`,
    fr: (mode, value, last) => `Ton : mode=${mode}, valeur=${value || "‚Äî"}, auto dernier=${last || "‚Äî"}`,
  },

  // –∑–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞
  generic_error: {
    uk: (e) => `‚ùå –ü–æ–º–∏–ª–∫–∞: ${e}`,
    ru: (e) => `‚ùå –û—à–∏–±–∫–∞: ${e}`,
    de: (e) => `‚ùå Fehler: ${e}`,
    en: (e) => `‚ùå Error: ${e}`,
    fr: (e) => `‚ùå Erreur : ${e}`,
  },
};

export const tr = (lang, key, ...args) => {
  const v = TR[key]?.[lang] ?? TR[key]?.en;
  return typeof v === "function" ? v(...args) : v;
};