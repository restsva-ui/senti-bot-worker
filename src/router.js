import { tgSendMessage, tgGetFileUrl } from "./adapters/telegram.js";

// –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∞–ø–¥–µ–π—Ç—ñ–≤
async function handleUpdate(update, env) {
  try {
    if (update.message?.text) {
      const chatId = update.message.chat.id;
      const text = update.message.text.trim();

      if (text === "/start") {
        await tgSendMessage(chatId, "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø Senti ‚Äî —Ç–≤—ñ–π —É–≤–∞–∂–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫.\n\n‚Ä¢ –ù–∞–¥—ñ—à–ª–∏ —Ç–µ–∫—Å—Ç ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–º –∫–æ—Ä–æ—Ç–∫–æ —ñ –ø–æ —Å—É—Ç—ñ.\n‚Ä¢ –ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ —á–∏ PDF ‚Äî –æ–ø–∏—à—É —ñ –∑—Ä–æ–±–ª—é –≤–∏—Å–Ω–æ–≤–∫–∏.\n–°–ø—Ä–æ–±—É–π: –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –¥—É–º–∫—É –∞–±–æ –∫–∏–Ω—å –∫–∞—Ä—Ç–∏–Ω–∫—É.", env);
        return;
      }

      await tgSendMessage(chatId, `–ì–æ—Ç–æ–≤–æ! –Ø –æ—Ç—Ä–∏–º–∞–≤ —Ç–≤—ñ–π –∑–∞–ø–∏—Ç —ñ –≤—ñ–¥–ø–æ–≤—ñ–º –ø—Ä–æ—Å—Ç–∏–º–∏ —Å–ª–æ–≤–∞–º–∏:\n\n‚Ä¢ ${text}`, env);
    }

    if (update.message?.photo || update.message?.document) {
      const chatId = update.message.chat.id;
      const caption = update.message.caption || "–§–∞–π–ª";

      if (update.message.photo) {
        await tgSendMessage(chatId, `üñºÔ∏è –¢–≤—ñ–π –ø—ñ–¥–ø–∏—Å: ${caption}\n–ë–∞—á—É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –∞–ª–µ –Ω–µ –æ—Ç—Ä–∏–º–∞–≤ –π–æ–≥–æ URL –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É.`, env);
      }

      if (update.message.document) {
        await tgSendMessage(chatId, `üìÑ –û—Ç—Ä–∏–º–∞–≤ –¥–æ–∫—É–º–µ–Ω—Ç "${update.message.document.file_name}". –°–∫–∞–∂–∏, —â–æ —Å–∞–º–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏: –≤–∏–ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç, –∑–Ω–∞–π—Ç–∏ —á–∏—Å–ª–∞/–¥–∞—Ç–∏ —á–∏ –∑—Ä–æ–±–∏—Ç–∏ –≤–∏—Å–Ω–æ–≤–æ–∫?`, env);
      }
    }
  } catch (err) {
    console.error("Router error:", err);
  }
}

// –î–µ—Ñ–æ–ª—Ç–Ω–∏–π –µ–∫—Å–ø–æ—Ä—Ç –¥–ª—è index.js
export default {
  async fetch(request, env, ctx) {
    if (request.method === "POST" && new URL(request.url).pathname === `/${env.WEBHOOK_SECRET}`) {
      const update = await request.json();
      await handleUpdate(update, env);
      return new Response("ok", { status: 200 });
    }
    return new Response("Not found", { status: 404 });
  },
};