import { tgSendMessage, tgSendChatAction, tgGetFileUrl } from "./adapters/telegram.js";
import { aiText, aiVision } from "./ai/providers.js";

// –õ–∞–∫–æ–Ω—ñ—á–Ω–µ –≤—ñ—Ç–∞–Ω–Ω—è –±–µ–∑ –∑–≥–∞–¥–∫–∏ –º–æ–¥–µ–ª–µ–π
const START_TEXT =
  "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ —Ç–µ–∫—Å—Ç ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–º –∫–æ—Ä–æ—Ç–∫–æ –π –ø–æ —Å—É—Ç—ñ. –ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ ‚Äî –æ–ø–∏—à—É –π –¥–æ–¥–∞–º –≤–∏—Å–Ω–æ–≤–∫–∏. –Ø –ø–æ—Ä—É—á. üß†";

export async function handleUpdate(update, env) {
  const msg = update?.message;
  if (!msg) return;

  const chatId = msg.chat?.id;
  if (!chatId) return;

  const text = (msg.text ?? msg.caption ?? "").trim();

  // /start
  if (text.startsWith("/start")) {
    await tgSendMessage(env.TELEGRAM_TOKEN, chatId, START_TEXT);
    return;
    }

  // –§–æ—Ç–æ –∞–±–æ –¥–æ–∫—É–º–µ–Ω—Ç-–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  const photoArr = msg.photo;
  const doc = msg.document;
  const hasImage =
    (Array.isArray(photoArr) && photoArr.length > 0) ||
    (doc && typeof doc.mime_type === "string" && doc.mime_type.startsWith("image/"));

  if (hasImage) {
    await tgSendChatAction(env.TELEGRAM_TOKEN, chatId, "upload_photo");

    // –±–µ—Ä–µ–º–æ –Ω–∞–π–±—ñ–ª—å—à–µ —Ñ–æ—Ç–æ –∞–±–æ document.file_id
    const fileId =
      (Array.isArray(photoArr) && photoArr[photoArr.length - 1]?.file_id) ||
      (doc && doc.file_id) ||
      null;

    if (!fileId) {
      await tgSendMessage(env.TELEGRAM_TOKEN, chatId, "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è üòï");
      return;
    }

    const fileUrl = await tgGetFileUrl(env.TELEGRAM_TOKEN, fileId);
    if (!fileUrl) {
      await tgSendMessage(env.TELEGRAM_TOKEN, chatId, "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–æ—Ç–æ.");
      return;
    }

    const prompt =
      text ||
      "–û–ø–∏—à–∏ –¥–µ—Ç–∞–ª—å–Ω–æ, —â–æ –Ω–∞ —Ñ–æ—Ç–æ. –î–æ–¥–∞–π –∫–æ—Ä–æ—Ç–∫—ñ –≤–∏—Å–Ω–æ–≤–∫–∏ —Ç–∞ –º–æ–∂–ª–∏–≤—ñ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.";

    const answer = await aiVision({ prompt, imageUrl: fileUrl }, env);
    await tgSendMessage(env.TELEGRAM_TOKEN, chatId, answer);
    return;
  }

  // –ó–≤–∏—á–∞–π–Ω–∏–π —Ç–µ–∫—Å—Ç
  if (text) {
    await tgSendChatAction(env.TELEGRAM_TOKEN, chatId, "typing");
    const answer = await aiText({ prompt: text }, env);
    await tgSendMessage(env.TELEGRAM_TOKEN, chatId, answer);
    return;
  }

  // –ù—ñ—á–æ–≥–æ –∫–æ—Ä–∏—Å–Ω–æ–≥–æ –Ω–µ –ø—Ä–∏–π—à–ª–æ
  await tgSendMessage(env.TELEGRAM_TOKEN, chatId, "–ù–∞–¥—ñ—à–ª–∏, –±—É–¥—å –ª–∞—Å–∫–∞, —Ç–µ–∫—Å—Ç –∞–±–æ —Ñ–æ—Ç–æ üôÇ");
}