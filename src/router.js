// –î—É–∂–µ –ø—Ä–æ—Å—Ç–∏–π —Ä–æ—É—Ç–µ—Ä: /start, —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ
import { tgSendMessage, tgSendChatAction, tgGetFileUrl } from "./adapters/telegram.js";
import { aiText, aiVision } from "./ai/providers.js";

export async function handleUpdate(update, env) {
  try {
    const msg = update.message || update.edited_message;
    const cb  = update.callback_query;

    // –Ø–∫—â–æ callback_query ‚Äî –ø–æ–∫–∏ –ø—Ä–æ—Å—Ç–æ —ñ–≥–Ω–æ—Ä—É—î–º–æ
    if (!msg && !cb) return;

    const chatId = (msg?.chat?.id) || (cb?.message?.chat?.id);
    if (!chatId) return;

    // –¢–µ–∫—Å—Ç/–ø—ñ–¥–ø–∏—Å
    const text = (msg?.text ?? msg?.caption ?? "").trim();

    // 1) –ö–æ–º–∞–Ω–¥–∞ /start
    if (text.startsWith("/start")) {
      const hello =
        "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø Senti.\n" +
        "–ù–∞–¥—ñ—à–ª–∏ —Ç–µ–∫—Å—Ç ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–º –ª–∞–∫–æ–Ω—ñ—á–Ω–æ.\n" +
        "–ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ ‚Äî –æ–ø–∏—à—É –π –∑—Ä–æ–±–ª—é –≤–∏—Å–Ω–æ–≤–∫–∏.\n" +
        "–°–ø—Ä–æ–±—É–π –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑.";
      await tgSendMessage(env, chatId, hello);
      return;
    }

    // 2) –§–æ—Ç–æ ‚Üí Vision
    const photos = msg?.photo;
    if (Array.isArray(photos) && photos.length > 0) {
      // Telegram –Ω–∞–¥—Å–∏–ª–∞—î –∫—ñ–ª—å–∫–∞ —Ä–æ–∑–º—ñ—Ä—ñ–≤ ‚Äî –±–µ—Ä–µ–º–æ –Ω–∞–π–±—ñ–ª—å—à–∏–π
      const best = photos[photos.length - 1];
      if (!best?.file_id) return;

      await tgSendChatAction(env, chatId, "typing");

      const fileUrl = await tgGetFileUrl(env, best.file_id);
      if (!fileUrl) {
        await tgSendMessage(env, chatId, "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ñ–æ—Ç–æ. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ üôè");
        return;
      }

      const userHint = text ? `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –¥–æ–¥–∞–≤ –ø—ñ–¥–ø–∏—Å: "${text}".` : "";
      const prompt =
        "–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. –ö–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à–∏, –≤–∏–¥—ñ–ª–∏ –∫–ª—é—á–æ–≤—ñ –æ–±‚Äô—î–∫—Ç–∏, " +
        "–ø–æ–º—ñ—Ä–∫—É–π –ø—Ä–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–∞ –¥–∞–π —Å—Ç–∏—Å–ª–∏–π –≤–∏—Å–Ω–æ–≤–æ–∫. " + userHint;

      const answer = await aiVision(env, fileUrl, prompt);
      await tgSendMessage(env, chatId, answer || "–ù–µ –≤–¥–∞–ª–æ—Å—å –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å üòÖ");
      return;
    }

    // 3) –ü—Ä–æ—Å—Ç–∏–π —Ç–µ–∫—Å—Ç ‚Üí Text
    if (text) {
      await tgSendChatAction(env, chatId, "typing");

      const system =
        "–¢–∏ –¥—Ä—É–∂–Ω—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ Senti. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —Å—Ç–∏—Å–ª–æ, –∫–æ—Ä–∏—Å–Ω–æ, –±–µ–∑ –∑–≥–∞–¥–∫–∏ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –º–æ–¥–µ–ª–µ–π. " +
        "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º.";

      const answer = await aiText(env, text, { system });
      await tgSendMessage(env, chatId, answer || "–Ø —Ç—Ä–æ—Ö–∏ –∑–∞–≥—É–±–∏–≤—Å—è ü§î –°–ø—Ä–æ–±—É–π –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª—é–≤–∞—Ç–∏.");
      return;
    }

    // –Ü–Ω–∞–∫—à–µ ‚Äî –º–æ–≤—á–∏–º–æ
  } catch (e) {
    // –§–µ–π–ª-—Å–µ–π—Ñ: –Ω–µ –ø–∞–¥–∞—î–º–æ
    // –ú–æ–∂–µ—à –≤–º–∏–∫–∞—Ç–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ:
    // console.log("router error", e?.message);
  }
}