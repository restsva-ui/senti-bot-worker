// src/router.ts
import { menu } from "./commands/menu";
import { likePanel, handleLikeCallback } from "./commands/likepanel";
import { sendMessage, answerCallbackQuery } from "./telegram/api";
import { CFG } from "./config";

export async function handleUpdate(update: any) {
  try {
    if (update.message) {
      const chatId = update.message.chat.id;
      const text = update.message.text?.trim();

      switch (text) {
        case "/start":
          await sendMessage(chatId, "üëã –ü—Ä–∏–≤—ñ—Ç! –ë–æ—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ Cloudflare Workers. –ù–∞–ø–∏—à—ñ—Ç—å /help –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏.");
          break;
        case "/ping":
          await sendMessage(chatId, "pong ‚úÖ");
          break;
        case "/help":
          await sendMessage(
            chatId,
            "üìñ –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n" +
              "/start ‚Äî –∑–∞–ø—É—Å–∫ —ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è\n" +
              "/ping ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∂–∏–≤–æ—Å—Ç—ñ –±–æ—Ç–∞\n" +
              "/menu ‚Äî –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é\n" +
              "/likepanel ‚Äî –ø–∞–Ω–µ–ª—å –ª–∞–π–∫—ñ–≤\n" +
              "/help ‚Äî –¥–æ–≤—ñ–¥–∫–∞"
          );
          break;
        case "/menu":
          await menu(chatId);
          break;
        case "/likepanel":
          await likePanel(chatId);
          break;
      }
    }

    if (update.callback_query) {
      const cq = update.callback_query;
      const chatId = cq.message?.chat?.id;
      const data = cq.data;

      if (!chatId || !data) return;

      switch (data) {
        case "cb_ping":
          await answerCallbackQuery(cq.id, "pong ‚úÖ");
          await sendMessage(chatId, "pong ‚úÖ");
          break;
        case "cb_likepanel":
          await likePanel(chatId);
          break;
        case "cb_help":
          await sendMessage(
            chatId,
            "üìñ –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n" +
              "/start ‚Äî –∑–∞–ø—É—Å–∫ —ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è\n" +
              "/ping ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∂–∏–≤–æ—Å—Ç—ñ –±–æ—Ç–∞\n" +
              "/menu ‚Äî –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é\n" +
              "/likepanel ‚Äî –ø–∞–Ω–µ–ª—å –ª–∞–π–∫—ñ–≤\n" +
              "/help ‚Äî –¥–æ–≤—ñ–¥–∫–∞"
          );
          break;
        case "like":
        case "dislike":
          await handleLikeCallback(chatId, data, cq.id, cq.message);
          break;
        default:
          await answerCallbackQuery(cq.id, "ü§∑‚Äç‚ôÇÔ∏è –ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è –∫–Ω–æ–ø–∫–∏.");
      }
    }
  } catch (err) {
    console.error("handleUpdate fatal:", err);
  }
}